name: rest-kafka-postgres-debezium-docker-app

services:
  app:
    image: spring-boot-runner
    container_name: spring-boot-runner-container
    depends_on:
      connectors-setup:
        condition: service_completed_successfully
    extends:
      file: docker-compose.build.yml
      service: mvn
    ports:
      - 8080:8080
      - 5005:5005
    command: spring-boot:run
    environment:
      JAVA_TOOL_OPTIONS: -Dspring-boot.run.jvmArguments="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=*:5005"
    env_file: .env

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper-container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    expose:
      - 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka-container
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list
      interval: 30s
      timeout: 2s
      retries: 3
    depends_on:
      zookeeper:
        condition: service_started
    env_file: .env.kafka
    ports:
      - 9092:9092

  db:
    image: postgres:13.1-alpine
    container_name: db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 2s
      retries: 3
    volumes:
      - ../docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/
    env_file: .env.db
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - 5432:5432
    command: [ "postgres", "-c", "wal_level=logical" ]

  debezium-connect:
    image: debezium/connect:2.7
    container_name: debezium-connect-container
    healthcheck:
      test: curl --fail http://localhost:8083/connectors/ || exit 1
      interval: 30s
      timeout: 2s
      retries: 3
    ports:
      - 8083:8083
    env_file: .env.debezium.connect
    depends_on:
      db:
        condition: service_healthy

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.4.4
    container_name: kafka-connect-container
    healthcheck:
      test: curl --fail http://localhost:8083/connectors/ || exit 1
      interval: 30s
      timeout: 2s
      retries: 3
    volumes:
      - ../docker/jars:/etc/kafka-connect/jars
    ports:
      - 8084:8083
    env_file: .env.kafka.connect
    depends_on:
      db:
        condition: service_healthy

  connectors-setup:
    image: curlimages/curl:latest
    container_name: connectors-setup-container
    volumes:
      - ../docker/connector-setup-config:/connector-setup-config
    depends_on:
      debezium-connect:
        condition: service_healthy
      kafka-connect:
        condition: service_healthy
    command: ["sh", "-c", "/connector-setup-config/scripts/debezium-ready.sh && /connector-setup-config/scripts/jdbc-ready.sh"]